// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dotnet_ef_simple_rpg_web_api.Data;

#nullable disable

namespace dotnet_ef_simple_rpg_web_api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240406162554_Seed")]
    partial class Seed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("CharacterSkill", b =>
                {
                    b.Property<int>("CharactersId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkillsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CharactersId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("CharacterSkill");
                });

            modelBuilder.Entity("CharacterWeapon", b =>
                {
                    b.Property<int>("CharactersId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WeaponsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CharactersId", "WeaponsId");

                    b.HasIndex("WeaponsId");

                    b.ToTable("CharacterWeapon");
                });

            modelBuilder.Entity("dotnet_ef_simple_rpg_web_api.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Wisdom")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("Books");
                });

            modelBuilder.Entity("dotnet_ef_simple_rpg_web_api.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Class")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defeats")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defense")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fights")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HitPoints")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Intelligence")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Strength")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Victories")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Class = 5,
                            Defeats = 0,
                            Defense = 60,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 90,
                            Name = "TestCharacter1",
                            Strength = 60,
                            UserId = 1,
                            Victories = 0
                        },
                        new
                        {
                            Id = 2,
                            Class = 1,
                            Defeats = 0,
                            Defense = 50,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 80,
                            Name = "TestCharacter2",
                            Strength = 50,
                            UserId = 2,
                            Victories = 0
                        },
                        new
                        {
                            Id = 3,
                            Class = 1,
                            Defeats = 0,
                            Defense = 50,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 80,
                            Name = "TestCharacter3",
                            Strength = 50,
                            UserId = 2,
                            Victories = 0
                        });
                });

            modelBuilder.Entity("dotnet_ef_simple_rpg_web_api.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Complexity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Complexity = 90,
                            Name = "Healing"
                        },
                        new
                        {
                            Id = 2,
                            Complexity = 70,
                            Name = "Law"
                        },
                        new
                        {
                            Id = 3,
                            Complexity = 40,
                            Name = "Poetry"
                        },
                        new
                        {
                            Id = 4,
                            Complexity = 22,
                            Name = "Swimming"
                        },
                        new
                        {
                            Id = 5,
                            Complexity = 15,
                            Name = "Dancing"
                        },
                        new
                        {
                            Id = 6,
                            Complexity = 99,
                            Name = "Teleportation"
                        },
                        new
                        {
                            Id = 7,
                            Complexity = 80,
                            Name = "Herbalism"
                        });
                });

            modelBuilder.Entity("dotnet_ef_simple_rpg_web_api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("Player");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 79, 44, 120, 132, 16, 244, 17, 63, 245, 76, 78, 43, 207, 125, 242, 224, 12, 249, 10, 100, 42, 171, 248, 226, 245, 250, 37, 126, 64, 100, 108, 205, 202, 192, 229, 104, 158, 164, 201, 48, 20, 39, 77, 137, 207, 204, 241, 229, 91, 193, 17, 134, 131, 205, 137, 250, 30, 119, 13, 59, 214, 245, 200, 29 },
                            PasswordSalt = new byte[] { 255, 61, 59, 145, 198, 157, 163, 173, 148, 123, 3, 172, 30, 116, 240, 69, 137, 234, 28, 107, 168, 242, 32, 165, 210, 204, 7, 133, 215, 85, 58, 14, 37, 250, 66, 102, 146, 190, 25, 242, 26, 189, 26, 33, 69, 40, 175, 107, 120, 173, 197, 1, 93, 72, 139, 205, 233, 72, 67, 178, 33, 49, 137, 211, 53, 197, 173, 163, 174, 114, 125, 178, 95, 48, 192, 31, 144, 95, 248, 128, 36, 46, 65, 32, 33, 51, 53, 124, 234, 109, 116, 182, 104, 95, 120, 5, 66, 24, 182, 169, 221, 104, 17, 250, 89, 4, 187, 167, 186, 210, 21, 201, 174, 178, 179, 216, 73, 182, 227, 151, 206, 113, 44, 10, 240, 130, 251, 111 },
                            Role = "",
                            Username = "TestUser1"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = new byte[] { 79, 44, 120, 132, 16, 244, 17, 63, 245, 76, 78, 43, 207, 125, 242, 224, 12, 249, 10, 100, 42, 171, 248, 226, 245, 250, 37, 126, 64, 100, 108, 205, 202, 192, 229, 104, 158, 164, 201, 48, 20, 39, 77, 137, 207, 204, 241, 229, 91, 193, 17, 134, 131, 205, 137, 250, 30, 119, 13, 59, 214, 245, 200, 29 },
                            PasswordSalt = new byte[] { 255, 61, 59, 145, 198, 157, 163, 173, 148, 123, 3, 172, 30, 116, 240, 69, 137, 234, 28, 107, 168, 242, 32, 165, 210, 204, 7, 133, 215, 85, 58, 14, 37, 250, 66, 102, 146, 190, 25, 242, 26, 189, 26, 33, 69, 40, 175, 107, 120, 173, 197, 1, 93, 72, 139, 205, 233, 72, 67, 178, 33, 49, 137, 211, 53, 197, 173, 163, 174, 114, 125, 178, 95, 48, 192, 31, 144, 95, 248, 128, 36, 46, 65, 32, 33, 51, 53, 124, 234, 109, 116, 182, 104, 95, 120, 5, 66, 24, 182, 169, 221, 104, 17, 250, 89, 4, 187, 167, 186, 210, 21, 201, 174, 178, 179, 216, 73, 182, 227, 151, 206, 113, 44, 10, 240, 130, 251, 111 },
                            Role = "",
                            Username = "TestUser2"
                        });
                });

            modelBuilder.Entity("dotnet_ef_simple_rpg_web_api.Models.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Damage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Weapons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Damage = 30,
                            Name = "Hammer"
                        },
                        new
                        {
                            Id = 2,
                            Damage = 40,
                            Name = "Axe"
                        },
                        new
                        {
                            Id = 3,
                            Damage = 40,
                            Name = "Bow"
                        },
                        new
                        {
                            Id = 4,
                            Damage = 42,
                            Name = "Crossbow"
                        },
                        new
                        {
                            Id = 5,
                            Damage = 55,
                            Name = "Wand"
                        },
                        new
                        {
                            Id = 6,
                            Damage = 30,
                            Name = "Whip"
                        },
                        new
                        {
                            Id = 7,
                            Damage = 10,
                            Name = "Hot Potato"
                        });
                });

            modelBuilder.Entity("CharacterSkill", b =>
                {
                    b.HasOne("dotnet_ef_simple_rpg_web_api.Models.Character", null)
                        .WithMany()
                        .HasForeignKey("CharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dotnet_ef_simple_rpg_web_api.Models.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CharacterWeapon", b =>
                {
                    b.HasOne("dotnet_ef_simple_rpg_web_api.Models.Character", null)
                        .WithMany()
                        .HasForeignKey("CharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dotnet_ef_simple_rpg_web_api.Models.Weapon", null)
                        .WithMany()
                        .HasForeignKey("WeaponsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("dotnet_ef_simple_rpg_web_api.Models.Book", b =>
                {
                    b.HasOne("dotnet_ef_simple_rpg_web_api.Models.Character", "Character")
                        .WithOne("Book")
                        .HasForeignKey("dotnet_ef_simple_rpg_web_api.Models.Book", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("dotnet_ef_simple_rpg_web_api.Models.Character", b =>
                {
                    b.HasOne("dotnet_ef_simple_rpg_web_api.Models.User", "User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("dotnet_ef_simple_rpg_web_api.Models.Character", b =>
                {
                    b.Navigation("Book");
                });

            modelBuilder.Entity("dotnet_ef_simple_rpg_web_api.Models.User", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
