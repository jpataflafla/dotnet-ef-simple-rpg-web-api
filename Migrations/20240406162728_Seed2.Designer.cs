// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dotnet_ef_simple_rpg_web_api.Data;

#nullable disable

namespace dotnet_ef_simple_rpg_web_api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240406162728_Seed2")]
    partial class Seed2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("CharacterSkill", b =>
                {
                    b.Property<int>("CharactersId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkillsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CharactersId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("CharacterSkill");
                });

            modelBuilder.Entity("CharacterWeapon", b =>
                {
                    b.Property<int>("CharactersId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WeaponsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CharactersId", "WeaponsId");

                    b.HasIndex("WeaponsId");

                    b.ToTable("CharacterWeapon");
                });

            modelBuilder.Entity("dotnet_ef_simple_rpg_web_api.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Wisdom")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("Books");
                });

            modelBuilder.Entity("dotnet_ef_simple_rpg_web_api.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Class")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defeats")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defense")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fights")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HitPoints")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Intelligence")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Strength")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Victories")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Class = 5,
                            Defeats = 0,
                            Defense = 60,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 90,
                            Name = "TestCharacter1",
                            Strength = 60,
                            UserId = 1,
                            Victories = 0
                        },
                        new
                        {
                            Id = 2,
                            Class = 1,
                            Defeats = 0,
                            Defense = 50,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 80,
                            Name = "TestCharacter2",
                            Strength = 50,
                            UserId = 2,
                            Victories = 0
                        },
                        new
                        {
                            Id = 3,
                            Class = 1,
                            Defeats = 0,
                            Defense = 50,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 80,
                            Name = "TestCharacter3",
                            Strength = 50,
                            UserId = 2,
                            Victories = 0
                        });
                });

            modelBuilder.Entity("dotnet_ef_simple_rpg_web_api.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Complexity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Complexity = 90,
                            Name = "Healing"
                        },
                        new
                        {
                            Id = 2,
                            Complexity = 70,
                            Name = "Law"
                        },
                        new
                        {
                            Id = 3,
                            Complexity = 40,
                            Name = "Poetry"
                        },
                        new
                        {
                            Id = 4,
                            Complexity = 22,
                            Name = "Swimming"
                        },
                        new
                        {
                            Id = 5,
                            Complexity = 15,
                            Name = "Dancing"
                        },
                        new
                        {
                            Id = 6,
                            Complexity = 99,
                            Name = "Teleportation"
                        },
                        new
                        {
                            Id = 7,
                            Complexity = 80,
                            Name = "Herbalism"
                        });
                });

            modelBuilder.Entity("dotnet_ef_simple_rpg_web_api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("Player");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 186, 92, 156, 60, 193, 14, 164, 11, 157, 200, 52, 181, 202, 221, 36, 141, 118, 97, 169, 168, 118, 243, 70, 46, 65, 162, 43, 145, 246, 172, 227, 147, 134, 59, 15, 141, 7, 33, 214, 19, 141, 142, 160, 228, 40, 98, 182, 148, 64, 83, 225, 225, 236, 189, 75, 84, 121, 5, 214, 254, 199, 213, 130, 104 },
                            PasswordSalt = new byte[] { 115, 80, 153, 77, 244, 74, 221, 97, 184, 170, 188, 27, 160, 210, 144, 89, 36, 133, 139, 157, 6, 35, 201, 127, 25, 104, 79, 120, 153, 175, 34, 0, 3, 128, 63, 248, 146, 94, 184, 16, 164, 13, 38, 5, 147, 95, 84, 76, 82, 51, 236, 197, 87, 20, 213, 109, 212, 187, 154, 124, 239, 7, 4, 35, 25, 42, 82, 114, 30, 115, 33, 202, 131, 180, 45, 126, 74, 2, 89, 121, 170, 14, 239, 233, 48, 162, 18, 110, 237, 56, 59, 53, 94, 223, 82, 58, 248, 243, 242, 223, 70, 42, 107, 176, 210, 222, 34, 179, 126, 169, 139, 38, 114, 57, 103, 47, 148, 54, 123, 207, 244, 160, 69, 238, 247, 118, 45, 255 },
                            Role = "",
                            Username = "TestUser1"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = new byte[] { 186, 92, 156, 60, 193, 14, 164, 11, 157, 200, 52, 181, 202, 221, 36, 141, 118, 97, 169, 168, 118, 243, 70, 46, 65, 162, 43, 145, 246, 172, 227, 147, 134, 59, 15, 141, 7, 33, 214, 19, 141, 142, 160, 228, 40, 98, 182, 148, 64, 83, 225, 225, 236, 189, 75, 84, 121, 5, 214, 254, 199, 213, 130, 104 },
                            PasswordSalt = new byte[] { 115, 80, 153, 77, 244, 74, 221, 97, 184, 170, 188, 27, 160, 210, 144, 89, 36, 133, 139, 157, 6, 35, 201, 127, 25, 104, 79, 120, 153, 175, 34, 0, 3, 128, 63, 248, 146, 94, 184, 16, 164, 13, 38, 5, 147, 95, 84, 76, 82, 51, 236, 197, 87, 20, 213, 109, 212, 187, 154, 124, 239, 7, 4, 35, 25, 42, 82, 114, 30, 115, 33, 202, 131, 180, 45, 126, 74, 2, 89, 121, 170, 14, 239, 233, 48, 162, 18, 110, 237, 56, 59, 53, 94, 223, 82, 58, 248, 243, 242, 223, 70, 42, 107, 176, 210, 222, 34, 179, 126, 169, 139, 38, 114, 57, 103, 47, 148, 54, 123, 207, 244, 160, 69, 238, 247, 118, 45, 255 },
                            Role = "",
                            Username = "TestUser2"
                        });
                });

            modelBuilder.Entity("dotnet_ef_simple_rpg_web_api.Models.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Damage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Weapons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Damage = 30,
                            Name = "Hammer"
                        },
                        new
                        {
                            Id = 2,
                            Damage = 40,
                            Name = "Axe"
                        },
                        new
                        {
                            Id = 3,
                            Damage = 40,
                            Name = "Bow"
                        },
                        new
                        {
                            Id = 4,
                            Damage = 42,
                            Name = "Crossbow"
                        },
                        new
                        {
                            Id = 5,
                            Damage = 55,
                            Name = "Wand"
                        },
                        new
                        {
                            Id = 6,
                            Damage = 30,
                            Name = "Whip"
                        },
                        new
                        {
                            Id = 7,
                            Damage = 10,
                            Name = "Hot Potato"
                        });
                });

            modelBuilder.Entity("CharacterSkill", b =>
                {
                    b.HasOne("dotnet_ef_simple_rpg_web_api.Models.Character", null)
                        .WithMany()
                        .HasForeignKey("CharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dotnet_ef_simple_rpg_web_api.Models.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CharacterWeapon", b =>
                {
                    b.HasOne("dotnet_ef_simple_rpg_web_api.Models.Character", null)
                        .WithMany()
                        .HasForeignKey("CharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dotnet_ef_simple_rpg_web_api.Models.Weapon", null)
                        .WithMany()
                        .HasForeignKey("WeaponsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("dotnet_ef_simple_rpg_web_api.Models.Book", b =>
                {
                    b.HasOne("dotnet_ef_simple_rpg_web_api.Models.Character", "Character")
                        .WithOne("Book")
                        .HasForeignKey("dotnet_ef_simple_rpg_web_api.Models.Book", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("dotnet_ef_simple_rpg_web_api.Models.Character", b =>
                {
                    b.HasOne("dotnet_ef_simple_rpg_web_api.Models.User", "User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("dotnet_ef_simple_rpg_web_api.Models.Character", b =>
                {
                    b.Navigation("Book");
                });

            modelBuilder.Entity("dotnet_ef_simple_rpg_web_api.Models.User", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
