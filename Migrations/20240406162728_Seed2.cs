using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace dotnet_ef_simple_rpg_web_api.Migrations
{
    /// <inheritdoc />
    public partial class Seed2 : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 186, 92, 156, 60, 193, 14, 164, 11, 157, 200, 52, 181, 202, 221, 36, 141, 118, 97, 169, 168, 118, 243, 70, 46, 65, 162, 43, 145, 246, 172, 227, 147, 134, 59, 15, 141, 7, 33, 214, 19, 141, 142, 160, 228, 40, 98, 182, 148, 64, 83, 225, 225, 236, 189, 75, 84, 121, 5, 214, 254, 199, 213, 130, 104 }, new byte[] { 115, 80, 153, 77, 244, 74, 221, 97, 184, 170, 188, 27, 160, 210, 144, 89, 36, 133, 139, 157, 6, 35, 201, 127, 25, 104, 79, 120, 153, 175, 34, 0, 3, 128, 63, 248, 146, 94, 184, 16, 164, 13, 38, 5, 147, 95, 84, 76, 82, 51, 236, 197, 87, 20, 213, 109, 212, 187, 154, 124, 239, 7, 4, 35, 25, 42, 82, 114, 30, 115, 33, 202, 131, 180, 45, 126, 74, 2, 89, 121, 170, 14, 239, 233, 48, 162, 18, 110, 237, 56, 59, 53, 94, 223, 82, 58, 248, 243, 242, 223, 70, 42, 107, 176, 210, 222, 34, 179, 126, 169, 139, 38, 114, 57, 103, 47, 148, 54, 123, 207, 244, 160, 69, 238, 247, 118, 45, 255 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 186, 92, 156, 60, 193, 14, 164, 11, 157, 200, 52, 181, 202, 221, 36, 141, 118, 97, 169, 168, 118, 243, 70, 46, 65, 162, 43, 145, 246, 172, 227, 147, 134, 59, 15, 141, 7, 33, 214, 19, 141, 142, 160, 228, 40, 98, 182, 148, 64, 83, 225, 225, 236, 189, 75, 84, 121, 5, 214, 254, 199, 213, 130, 104 }, new byte[] { 115, 80, 153, 77, 244, 74, 221, 97, 184, 170, 188, 27, 160, 210, 144, 89, 36, 133, 139, 157, 6, 35, 201, 127, 25, 104, 79, 120, 153, 175, 34, 0, 3, 128, 63, 248, 146, 94, 184, 16, 164, 13, 38, 5, 147, 95, 84, 76, 82, 51, 236, 197, 87, 20, 213, 109, 212, 187, 154, 124, 239, 7, 4, 35, 25, 42, 82, 114, 30, 115, 33, 202, 131, 180, 45, 126, 74, 2, 89, 121, 170, 14, 239, 233, 48, 162, 18, 110, 237, 56, 59, 53, 94, 223, 82, 58, 248, 243, 242, 223, 70, 42, 107, 176, 210, 222, 34, 179, 126, 169, 139, 38, 114, 57, 103, 47, 148, 54, 123, 207, 244, 160, 69, 238, 247, 118, 45, 255 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 79, 44, 120, 132, 16, 244, 17, 63, 245, 76, 78, 43, 207, 125, 242, 224, 12, 249, 10, 100, 42, 171, 248, 226, 245, 250, 37, 126, 64, 100, 108, 205, 202, 192, 229, 104, 158, 164, 201, 48, 20, 39, 77, 137, 207, 204, 241, 229, 91, 193, 17, 134, 131, 205, 137, 250, 30, 119, 13, 59, 214, 245, 200, 29 }, new byte[] { 255, 61, 59, 145, 198, 157, 163, 173, 148, 123, 3, 172, 30, 116, 240, 69, 137, 234, 28, 107, 168, 242, 32, 165, 210, 204, 7, 133, 215, 85, 58, 14, 37, 250, 66, 102, 146, 190, 25, 242, 26, 189, 26, 33, 69, 40, 175, 107, 120, 173, 197, 1, 93, 72, 139, 205, 233, 72, 67, 178, 33, 49, 137, 211, 53, 197, 173, 163, 174, 114, 125, 178, 95, 48, 192, 31, 144, 95, 248, 128, 36, 46, 65, 32, 33, 51, 53, 124, 234, 109, 116, 182, 104, 95, 120, 5, 66, 24, 182, 169, 221, 104, 17, 250, 89, 4, 187, 167, 186, 210, 21, 201, 174, 178, 179, 216, 73, 182, 227, 151, 206, 113, 44, 10, 240, 130, 251, 111 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 79, 44, 120, 132, 16, 244, 17, 63, 245, 76, 78, 43, 207, 125, 242, 224, 12, 249, 10, 100, 42, 171, 248, 226, 245, 250, 37, 126, 64, 100, 108, 205, 202, 192, 229, 104, 158, 164, 201, 48, 20, 39, 77, 137, 207, 204, 241, 229, 91, 193, 17, 134, 131, 205, 137, 250, 30, 119, 13, 59, 214, 245, 200, 29 }, new byte[] { 255, 61, 59, 145, 198, 157, 163, 173, 148, 123, 3, 172, 30, 116, 240, 69, 137, 234, 28, 107, 168, 242, 32, 165, 210, 204, 7, 133, 215, 85, 58, 14, 37, 250, 66, 102, 146, 190, 25, 242, 26, 189, 26, 33, 69, 40, 175, 107, 120, 173, 197, 1, 93, 72, 139, 205, 233, 72, 67, 178, 33, 49, 137, 211, 53, 197, 173, 163, 174, 114, 125, 178, 95, 48, 192, 31, 144, 95, 248, 128, 36, 46, 65, 32, 33, 51, 53, 124, 234, 109, 116, 182, 104, 95, 120, 5, 66, 24, 182, 169, 221, 104, 17, 250, 89, 4, 187, 167, 186, 210, 21, 201, 174, 178, 179, 216, 73, 182, 227, 151, 206, 113, 44, 10, 240, 130, 251, 111 } });
        }
    }
}
