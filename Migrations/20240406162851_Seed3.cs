using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace dotnet_ef_simple_rpg_web_api.Migrations
{
    /// <inheritdoc />
    public partial class Seed3 : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 255, 254, 7, 155, 47, 133, 91, 167, 236, 59, 51, 186, 50, 235, 61, 241, 61, 7, 249, 200, 236, 219, 224, 124, 187, 187, 68, 135, 112, 13, 198, 4, 160, 49, 142, 182, 215, 214, 100, 96, 111, 1, 168, 233, 210, 105, 69, 112, 235, 179, 160, 251, 243, 34, 219, 246, 64, 213, 186, 95, 189, 252, 23, 148 }, new byte[] { 121, 253, 226, 0, 78, 156, 196, 60, 33, 67, 39, 194, 178, 239, 100, 25, 108, 254, 253, 133, 31, 51, 43, 178, 112, 205, 52, 210, 202, 239, 155, 49, 225, 146, 207, 48, 32, 14, 41, 243, 198, 42, 228, 202, 219, 104, 118, 207, 27, 246, 57, 172, 245, 131, 191, 236, 254, 206, 167, 174, 99, 9, 138, 100, 32, 33, 191, 115, 36, 131, 143, 185, 22, 175, 86, 113, 95, 163, 202, 11, 172, 17, 174, 125, 233, 90, 214, 1, 165, 128, 56, 78, 98, 102, 108, 223, 22, 64, 102, 109, 254, 247, 26, 87, 56, 214, 237, 57, 53, 2, 98, 17, 140, 193, 160, 170, 189, 139, 129, 164, 39, 26, 40, 62, 130, 64, 104, 229 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 255, 254, 7, 155, 47, 133, 91, 167, 236, 59, 51, 186, 50, 235, 61, 241, 61, 7, 249, 200, 236, 219, 224, 124, 187, 187, 68, 135, 112, 13, 198, 4, 160, 49, 142, 182, 215, 214, 100, 96, 111, 1, 168, 233, 210, 105, 69, 112, 235, 179, 160, 251, 243, 34, 219, 246, 64, 213, 186, 95, 189, 252, 23, 148 }, new byte[] { 121, 253, 226, 0, 78, 156, 196, 60, 33, 67, 39, 194, 178, 239, 100, 25, 108, 254, 253, 133, 31, 51, 43, 178, 112, 205, 52, 210, 202, 239, 155, 49, 225, 146, 207, 48, 32, 14, 41, 243, 198, 42, 228, 202, 219, 104, 118, 207, 27, 246, 57, 172, 245, 131, 191, 236, 254, 206, 167, 174, 99, 9, 138, 100, 32, 33, 191, 115, 36, 131, 143, 185, 22, 175, 86, 113, 95, 163, 202, 11, 172, 17, 174, 125, 233, 90, 214, 1, 165, 128, 56, 78, 98, 102, 108, 223, 22, 64, 102, 109, 254, 247, 26, 87, 56, 214, 237, 57, 53, 2, 98, 17, 140, 193, 160, 170, 189, 139, 129, 164, 39, 26, 40, 62, 130, 64, 104, 229 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 186, 92, 156, 60, 193, 14, 164, 11, 157, 200, 52, 181, 202, 221, 36, 141, 118, 97, 169, 168, 118, 243, 70, 46, 65, 162, 43, 145, 246, 172, 227, 147, 134, 59, 15, 141, 7, 33, 214, 19, 141, 142, 160, 228, 40, 98, 182, 148, 64, 83, 225, 225, 236, 189, 75, 84, 121, 5, 214, 254, 199, 213, 130, 104 }, new byte[] { 115, 80, 153, 77, 244, 74, 221, 97, 184, 170, 188, 27, 160, 210, 144, 89, 36, 133, 139, 157, 6, 35, 201, 127, 25, 104, 79, 120, 153, 175, 34, 0, 3, 128, 63, 248, 146, 94, 184, 16, 164, 13, 38, 5, 147, 95, 84, 76, 82, 51, 236, 197, 87, 20, 213, 109, 212, 187, 154, 124, 239, 7, 4, 35, 25, 42, 82, 114, 30, 115, 33, 202, 131, 180, 45, 126, 74, 2, 89, 121, 170, 14, 239, 233, 48, 162, 18, 110, 237, 56, 59, 53, 94, 223, 82, 58, 248, 243, 242, 223, 70, 42, 107, 176, 210, 222, 34, 179, 126, 169, 139, 38, 114, 57, 103, 47, 148, 54, 123, 207, 244, 160, 69, 238, 247, 118, 45, 255 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 186, 92, 156, 60, 193, 14, 164, 11, 157, 200, 52, 181, 202, 221, 36, 141, 118, 97, 169, 168, 118, 243, 70, 46, 65, 162, 43, 145, 246, 172, 227, 147, 134, 59, 15, 141, 7, 33, 214, 19, 141, 142, 160, 228, 40, 98, 182, 148, 64, 83, 225, 225, 236, 189, 75, 84, 121, 5, 214, 254, 199, 213, 130, 104 }, new byte[] { 115, 80, 153, 77, 244, 74, 221, 97, 184, 170, 188, 27, 160, 210, 144, 89, 36, 133, 139, 157, 6, 35, 201, 127, 25, 104, 79, 120, 153, 175, 34, 0, 3, 128, 63, 248, 146, 94, 184, 16, 164, 13, 38, 5, 147, 95, 84, 76, 82, 51, 236, 197, 87, 20, 213, 109, 212, 187, 154, 124, 239, 7, 4, 35, 25, 42, 82, 114, 30, 115, 33, 202, 131, 180, 45, 126, 74, 2, 89, 121, 170, 14, 239, 233, 48, 162, 18, 110, 237, 56, 59, 53, 94, 223, 82, 58, 248, 243, 242, 223, 70, 42, 107, 176, 210, 222, 34, 179, 126, 169, 139, 38, 114, 57, 103, 47, 148, 54, 123, 207, 244, 160, 69, 238, 247, 118, 45, 255 } });
        }
    }
}
